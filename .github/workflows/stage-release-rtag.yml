name: 'Deploy release test rtag'

on:
    workflow_dispatch:
    push:
        branches: [release]
        paths-ignore:
            - docs/**
            - README.md
            - .github/**
            - cloudformation/**
            - db_scripts/**
            - jenkins/**
            - kibana-proxy/**
            - postgresql/**

env:
    AWS_REGION: us-east-1

permissions:
    id-token: write
    contents: read

jobs:
    deploy:
        name: Deploy Release to Stage
        runs-on: ubuntu-latest
        environment:
            name: stage

        steps:
            - name: Install system packages
              run: |
                  sudo apt-get update -qy && sudo apt-get dist-upgrade -qy && sudo apt-get install -qy \
                  libmemcached-dev libz-dev libfreetype6-dev libtiff-dev \
                  libjpeg-dev libopenjp2-7-dev libwebp-dev zlib1g-dev libpq-dev

            - name: Install node and npm
              uses: actions/setup-node@v3
              with:
                  node-version: '18'

            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  ref: 'release'
                  fetch-depth: 0
                  fetch-tags: 'true'

            # - name: Get history and tags for SCM versioning to work
            #   run: |
            #       git fetch --prune --unshallow
            #       git fetch --depth=1 origin +refs/tags/*:refs/tags/*
            #       git describe --tags

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  # Semantic version range syntax or exact version of a Python version
                  python-version: '3.10'
                  # Optional - x64 or x86 architecture, defaults to x64
                  architecture: 'x64'

            - name: Initialize venv install Dependencies
              id: python-build
              run: |
                  python3 -m venv venv-1
                  source venv-1//bin/activate
                  python3 -m pip install --upgrade pip
                  pip3 install -U packaging
                  pip3 install -U setuptools
                  pip3 install -U pipenv

                  pipenv install --dev --system --deploy

                  FULL_VERSION_NUMBER="$(pipenv run python -m setuptools_scm)"
                  echo "full_ver_num=$(echo "${FULL_VERSION_NUMBER}" >> $GITHUB_ENV
                  
                  # echo "version_number=$(echo "${FULL_VERSION_NUMBER}" | cut -d '+' -f 1)" >> $GITHUB_ENV
                  HOTFIX_VERSION_NUMBER="$(git describe --tags)"
                  echo "version_number=$(echo "${HOTFIX_VERSION_NUMBER}" | cut -d '-' -f 1 | cut -c 2- )" >> $GITHUB_ENV

                  python3 setup.py build

                  echo "full version number: $FULL_VERSION_NUMBER"
                  echo "hot fix version number: $HOTFIX_VERSION_NUMBER"

            - name: show version number
              run: |
                   echo "full version number: $full_ver_num"
                   echo "full version number after writing to named var on github_env: $full_ver_num"
                   echo "version number: $version_number"
                   
                   echo "try jobid step ref for FVN: ${{ steps.python-build.FULL_VERSION_NUMBER }}
                   echo ""
                   git describe --tags
